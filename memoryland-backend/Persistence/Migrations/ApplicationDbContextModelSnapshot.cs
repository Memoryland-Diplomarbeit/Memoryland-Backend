// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.Memoryland", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("MemorylandTypeId")
                        .HasColumnType("integer");

                    b.Property<long?>("MemorylandTypeId1")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<long?>("UserId1")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MemorylandTypeId1");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UserId1");

                    b.ToTable("Memorylands");
                });

            modelBuilder.Entity("Core.Entities.MemorylandConfiguration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("MemorylandId")
                        .HasColumnType("integer");

                    b.Property<long?>("MemorylandId1")
                        .HasColumnType("bigint");

                    b.Property<int>("PhotoId")
                        .HasColumnType("integer");

                    b.Property<long?>("PhotoId1")
                        .HasColumnType("bigint");

                    b.Property<int>("Position")
                        .HasMaxLength(50)
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MemorylandId1");

                    b.HasIndex("PhotoId1");

                    b.HasIndex("Position", "MemorylandId")
                        .IsUnique();

                    b.ToTable("MemorylandConfigurations");
                });

            modelBuilder.Entity("Core.Entities.MemorylandType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("PhotoAmount")
                        .HasMaxLength(50)
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("MemorylandTypes");
                });

            modelBuilder.Entity("Core.Entities.Photo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("PhotoAlbumId")
                        .HasColumnType("integer");

                    b.Property<long?>("PhotoAlbumId1")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PhotoAlbumId1");

                    b.HasIndex("Name", "PhotoAlbumId")
                        .IsUnique();

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Core.Entities.PhotoAlbum", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<long?>("UserId1")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UserId1");

                    b.ToTable("PhotoAlbums");
                });

            modelBuilder.Entity("Core.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Core.Entities.Memoryland", b =>
                {
                    b.HasOne("Core.Entities.MemorylandType", "MemorylandType")
                        .WithMany()
                        .HasForeignKey("MemorylandTypeId1");

                    b.HasOne("Core.Entities.User", "User")
                        .WithMany("Memorylands")
                        .HasForeignKey("UserId1");

                    b.Navigation("MemorylandType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Entities.MemorylandConfiguration", b =>
                {
                    b.HasOne("Core.Entities.Memoryland", "Memoryland")
                        .WithMany("MemorylandConfigurations")
                        .HasForeignKey("MemorylandId1");

                    b.HasOne("Core.Entities.Photo", "Photo")
                        .WithMany()
                        .HasForeignKey("PhotoId1");

                    b.Navigation("Memoryland");

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("Core.Entities.Photo", b =>
                {
                    b.HasOne("Core.Entities.PhotoAlbum", "PhotoAlbum")
                        .WithMany("Photos")
                        .HasForeignKey("PhotoAlbumId1");

                    b.Navigation("PhotoAlbum");
                });

            modelBuilder.Entity("Core.Entities.PhotoAlbum", b =>
                {
                    b.HasOne("Core.Entities.User", "User")
                        .WithMany("PhotoAlbums")
                        .HasForeignKey("UserId1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Entities.Memoryland", b =>
                {
                    b.Navigation("MemorylandConfigurations");
                });

            modelBuilder.Entity("Core.Entities.PhotoAlbum", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("Core.Entities.User", b =>
                {
                    b.Navigation("Memorylands");

                    b.Navigation("PhotoAlbums");
                });
#pragma warning restore 612, 618
        }
    }
}
